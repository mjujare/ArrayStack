import java.util.EmptyStackException;

/**
 * @author Madhuri Jujare
 * @version 09-04-15
 * CLASS: ArrayStack
 * This class realizes the DStack inteface.
 */
public class ArrayStack implements DStack
{
    private int top;
    private int STACK_SIZE = 10;
    private double[] stack;
    
    /**
     * Constructor for ArrayStack class
     */
    public ArrayStack()
    {
        stack = new double[STACK_SIZE];
        top = -1;
    }

    /**
     * When ArrayStack is empty
     * @return empty top (top element of stack)
     */
    public boolean isEmpty()
    {
        return top == -1;
    }

    /**
     * push
     * pushes (inserts) value into stack
     */
    public void push(double d)
    {
        if (++top == stack.length) {
            double[] newStack = new double[2 * stack.length];
            for (int i = 0; i < stack.length; i++) {
                newStack[i] = stack[i];
            }
            stack = newStack;
        }
        stack[top] = d;
    }

    /**
     * pop
     * @return the deleted value
     * @throws EmptyStackException if stack is empty
     */
    public double pop()
    {
        if (top == -1)
            throw new EmptyStackException();
        else {
            return stack[top--];
        }        
    }

    /**
     * peek
     * @return top of stack
     * @throws EmptyStackException if Stack is empty
     */
    public double peek()
    {
        if (top == -1)
            throw new EmptyStackException();
        else {
            return stack[top];
        }    
    }
}
